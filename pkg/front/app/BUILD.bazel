load("//:defs.bzl", "js_library", "ts_project")
load("@npm//@aspect-build/webpack:index.bzl", "webpack_dev_server", "webpack_bundle")
load("@npm//@bazel/esbuild:index.bzl", "esbuild", "esbuild_config")
load("@npm//http-server:index.bzl", "http_server")
load("@npm//@aspect-build/webpack:index.bzl", "webpack_bundle", "webpack_dev_server")
load("@build_bazel_rules_nodejs//:index.bzl", "pkg_web")
load("@npm//html-insert-assets:index.bzl", "html_insert_assets")

ts_project(
    name = "app",
    srcs = [
        "main.tsx",
        "src/app.tsx",
        "src/paragraph.tsx",
    ],
    deps = [
        "@npm//:node_modules"
    ],
    visibility = ["//visibility:public"],
)

# // TODO: Remove config
# esbuild_config(
#     name = "esbuild_config",
#     config_file = ":esbuild.config.mjs",
#     deps = [
#         "@npm//@types/node",
#         "@npm//esbuild-plugin-alias",
#         "@npm//esbuild-plugin-svgr",
#     ],
# )

esbuild(
    name = "bundle",
    # // TODO: Remove config
    # config = ":esbuild_config",
    entry_point = "main.jsx",
    splitting = False,
    deps = [":app"],
)

html_insert_assets(
    name = "assets_index_html",
    outs = ["index_.html"],
    args = [
        "--out=$@",
        "--html=$(execpath index.html)",
        "--roots=$(RULEDIR)",
        "--scripts",
        "--module",
    ] + ["bundle.js"],
    data = [ "index.html", "bundle" ],
)

pkg_web(
    name = "webapp",
    srcs = [
        "assets_index_html",
        "bundle"
    ],
)


http_server(
    name = "server",
    data = [
        "index.html",
        ":bundle",
    ],
    templated_args = ["."],
)

webpack_dev_server(
    name = "dev_server",
    data = [
        "index.html",
        ":app",
        "@npm//:node_modules",
    ],
    webpack_config = ":webpack.config.js",
)